# -*- Python -*-

Import('*')
from CXL_init import *

libName = "CXLDbAdapter"

env = CXL_env.Clone()

env_no_c11 = CXL_env.Clone()

# Remove the c++ flag for the env_no_c11 library
fullBuildFlags = env_no_c11['CPPFLAGS']
partBuildString = fullBuildFlags.replace('-std=c++11','')
env_no_c11.Replace( CPPFLAGS = partBuildString)

env.Append( CPPPATH = [ 
	".",
   	"../",
	"../../", #Support relocate from CommonProjects and keep includes path formats
	"./inc",
	"./src/",
	env['CXL_commonproj_dir'],
	env['CXL_commonproj_dir'] + '/AMDTCommonHeaders/',
])

sources = \
[
    "src/AMDTDbAdapter.cpp",
    "src/AMDTProfileDbAdapter.cpp",
]

commonLinkedLibraries = \
[
	"CXLBaseTools",
	"CXLOSWrappers",
	"CXLProfilerDAL",
    "libpthread"
]

# Contains all linked libraries:
linkedLibraries = commonLinkedLibraries
env.Prepend (LIBS = linkedLibraries)

# Creating object files	
objFiles = env.SharedObject(sources)

# Creating shared libraries
soFiles = env.SharedLibrary(
	target = libName, 
	source = objFiles)

# Installing libraries
libInstall = env.Install( 
	dir = env['CXL_lib_dir'], 
	source = (soFiles))

Return('libInstall')
