#!/bin/bash

# This script requires bash. Do not remove the above shebang line!

# ----------------------------------------------------------------------------------------------------------------------------------
# File name: CodeXLCpuProfiler
# This script sets CpuProfiler's related environment variables and
# launches the CodeXLCpuProfiler binary executable.
#
# (c) 2015 Advanced Micro Devices Inc. All Rights Reserved.
# ----------------------------------------------------------------------------------------------------------------------------------

# Get this script full path:
if echo "$0" | grep '^/' ; then
	thisScriptFullPath="$0"
else
	thisScriptFullPath=`pwd`/$0
fi

# Enable the use of symbolic links to the script
if [ -h ${thisScriptFullPath} ]
then
    LINKTARGET=`readlink -f "$thisScriptFullPath"`
    thisScriptFullPath=${LINKTARGET}
fi

# CpuProfiler's binaries directory is this scripts directory:
CpuProfBinariesDir=`dirname "$thisScriptFullPath"`
CpuProfQTLibsDir="${CpuProfBinariesDir}/RuntimeLibs/QT"

# Calculate CodeXL's binary executable path:
CpuProfBinaryExePath="${CpuProfBinariesDir}/CodeXLCpuProfiler-bin"

# Obtain libstdc++ needed version
LDCONFIG="ldconfig"
command -v "$LDCONFIG" &> /dev/null || LDCONFIG="/sbin/ldconfig"
CRUNTIMEPATH=$(${LDCONFIG} -p | grep libstdc++.so.6 | grep 64)
CRUNTIMEFILE=${CRUNTIMEPATH##*>}

# Test if current system C++ runtime is older from CodeXL version needed
CXL_CLIB=""
NEWCRUNTIME=$(strings $CRUNTIMEFILE | grep GLIBCXX_3.4.16)
if [ -z "$NEWCRUNTIME" ];then
    # System C++ runtime is older from CodeXL
    CXL_CLIB="${CpuProfBinariesDir}/RuntimeLibs/x86_64"
fi


# Add CodeXL's binaries directory to LD_LIBRARY_PATH:
if [ -z "$LD_LIBRARY_PATH" ]; then
	export LD_LIBRARY_PATH="${CpuProfBinariesDir}:${CXL_CLIB}:${CpuProfQTLibsDir}"
else
	export LD_LIBRARY_PATH="${CpuProfBinariesDir}:${CXL_CLIB}:${CpuProfQTLibsDir}:$LD_LIBRARY_PATH"
fi
# Run CodeXL:
eval "$CpuProfBinaryExePath $@"

